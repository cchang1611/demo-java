image: maven:latest

variables:
  GIT_DEPTH: 0
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  
  SSH_OPTIONS: "-o StrictHostKeyChecking=no"

stages:
  - maven-build
  - sonarqube-check
  - deploy
  
maven-build: 
  stage: maven-build
  script:
    - mvn clean install
    - 'mvn deploy -s ci_settings.xml'
    - mvn package
    - mvn target/*.jar web-demo.jar
    - 'curl -u admin:Zivra1234! -X POST "http://ec2-54-177-114-199.us-west-1.compute.amazonaws.com:8081/service/rest/v1/components?repository=DEMO-ARTIFACT" -H "accept: application/json" -H "Content-Type: multipart/form-data" -F "raw.directory=/latest" -F "raw.asset1=@/artifacts/web-demo.jar" -F "raw.asset1.filename=web-demo.jar"'
  only:
    - main

sonarqube-check:
  stage: sonarqube-check
  image: maven:3.6.3-jdk-11
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  
    GIT_DEPTH: "0"  
    
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - mvn verify sonar:sonar -Dsonar.qualitygate.wait=true
  allow_failure: true
  only:
    - main

autoDeploy:
  image: ubuntu
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - '[[ -f /.dockerenv ]] && mkdir -p ~/.ssh && echo "$KNOWN_HOST" > ~/.ssh/known_hosts'
  script:
    # - Get artifact from Nexus
    - 
    - ssh $SSH_OPTIONS ec2-user@54.177.3.10 'echo "accessed"'
    #- ssh ec2-user@54.177.3.10 'sudo service web-demo stop'
    #- scp web-demo.jar ec2-user@54.177.3.10:/opt/
    #- ssh ec2-user@54.177.3.10 'sudo service web-demo start'
  only:
    - main
